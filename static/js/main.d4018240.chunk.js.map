{"version":3,"sources":["js/constants/action-types.js","js/reducers/rootReducer.js","js/store/store.js","js/components/Button.js","js/actions/actions.js","js/components/Display.js","js/components/Calculator.js","index.js"],"names":["UPDATE","ADD","SUBTRACT","MULTIPLY","DIVIDE","CLEAR","EQUALS","initialState","currVal","history","prevOp","store","createStore","state","action","type","includes","payload","val","length","concat","test","slice","exp","numExp","math","toString","getDisplay","Button","props","handleClick","bind","event","this","id","clearDisplay","addition","subtraction","multiplication","division","equals","updateDisplay","className","onClick","React","Component","connect","dispatch","Display","ConnectedCalculator","Calculator","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d4018240.chunk.js","sourcesContent":["export const UPDATE = \"UPDATE\";\nexport const ADD = \"ADD\";\nexport const SUBTRACT = \"SUBTRACT\";\nexport const MULTIPLY = \"MULTIPLY\";\nexport const DIVIDE = \"DIVIDE\";\nexport const CLEAR = \"CLEAR\";\nexport const EQUALS = \"EQUALS\";\n","import { UPDATE } from \"../constants/action-types\";\nimport { ADD } from \"../constants/action-types\";\nimport { SUBTRACT } from \"../constants/action-types\";\nimport { MULTIPLY } from \"../constants/action-types\";\nimport { DIVIDE } from \"../constants/action-types\";\nimport { CLEAR } from \"../constants/action-types\";\nimport { EQUALS } from \"../constants/action-types\";\nimport * as math from \"mathjs\";\n\nconst initialState = {\n  currVal: '0',\n  history: '',\n  prevOp: ''\n};\n\nexport default function rootReducer(state = initialState, action) {\n  switch( action.type ) {\n    case UPDATE:\n      if((state.currVal.includes('.') && action.payload.val === '.') || state.currVal.length > 7){\n        return {\n          ...state\n        }\n      }\n      else {\n        return {\n          ...state,\n          currVal: state.currVal === \"0\" ? action.payload.val : state.currVal.concat(action.payload.val)\n        }\n      }\n    case ADD:\n      if(/[*/]$/.test(state.history) && state.currVal === '') {\n        return {\n          ...state,\n          history: state.history.slice(0,-1) + state.currVal + \"+\",\n          currVal: '',\n          prevOp: '+'\n        }\n      }\n      else if(/[*/]-$/.test(state.history) && state.currVal === '') {\n        return {\n          ...state,\n          history: state.history.slice(0,-2) + state.currVal + \"+\",\n          currVal: '',\n          prevOp: '+'\n        }\n      }\n      else {\n        return {\n          ...state,\n          history: state.prevOp===\"=\" ? state.currVal + \"+\" : state.history + state.currVal + \"+\",\n          currVal: '',\n          prevOp: '+'\n        }\n      }\n\n    case SUBTRACT:\n        return {\n            ...state,\n            history: state.prevOp===\"=\" ? state.currVal + \"-\" : state.history + state.currVal + \"-\",\n            currVal: '',\n            prevOp: '-'\n          }\n\n    case MULTIPLY:\n      if(/[+/]$/.test(state.history) && state.currVal === '') {\n        return {\n          ...state,\n          history: state.history.slice(0,-1) + state.currVal + \"*\",\n          currVal: '',\n          prevOp: \"*\"\n        }\n      }\n      else if(/[+/]-$/.test(state.history) && state.currVal === '') {\n        return {\n          ...state,\n          history: state.history.slice(0,-2) + state.currVal + \"*\",\n          currVal: '',\n          prevOp: '*'\n        }\n      }\n      else {\n        return {\n          ...state,\n          history: state.prevOp===\"=\" ? state.currVal + \"*\" : state.history + state.currVal + \"*\",\n          currVal: '',\n          prevOp: \"*\"\n        }\n      }\n\n    case DIVIDE:\n      if(/[+*]$/.test(state.history) && state.currVal === '') {\n        return {\n          ...state,\n          history: state.history.slice(0,-1) + state.currVal + \"/\",\n          currVal: '',\n          prevOp: \"/\"\n        }\n      }\n      else if(/[+*]-$/.test(state.history) && state.currVal === '') {\n        return {\n          ...state,\n          history: state.history.slice(0,-2) + state.currVal + \"/\",\n          currVal: '',\n          prevOp: '/'\n        }\n      }\n      else {\n        return {\n          ...state,\n          history: state.prevOp===\"=\" ? state.currVal + \"/\" : state.history + state.currVal + \"/\",\n          currVal: '',\n          prevOp: \"/\"\n        }\n      }\n\n\n    case EQUALS:\n      const exp = state.history + state.currVal;\n      const numExp = math.evaluate(exp);\n      if(state.prevOp === \"=\")\n      {\n        return {\n          ...state\n        }\n      }\n      else {\n        return {\n          ...state,\n          history: numExp.toString(),\n          currVal: numExp.toString(),\n          prevOp: \"=\"\n        }\n      }\n\n    case CLEAR:\n      return {\n        currVal: '0',\n        prevOp: '',\n        history: ''\n      }\n    default:\n      return state;\n  }\n}\n","import { createStore } from \"redux\";\nimport rootReducer from \"../reducers/rootReducer\";\n\nconst store = createStore(rootReducer);\n\nexport const getDisplay = (store) => store.currVal;\n\nexport default store;\n","import React from \"react\";\nimport \"../css/button.css\";\nimport { updateDisplay } from \"../actions/actions\";\nimport { addition } from \"../actions/actions\";\nimport { subtraction } from \"../actions/actions\";\nimport { multiplication } from \"../actions/actions\";\nimport { division } from \"../actions/actions\";\nimport { clearDisplay } from \"../actions/actions\";\nimport { equals } from \"../actions/actions\";\nimport { connect } from \"react-redux\";\n\nclass Button extends React.Component {\n  constructor(props) {\n    super(props);\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n    if(this.props.id === \"clear\") {\n      this.props.clearDisplay();\n    }\n    else if(this.props.id === \"add\") {\n      this.props.addition(this.props.val);\n    }\n    else if(this.props.id === \"subtract\") {\n      this.props.subtraction(this.props.val);\n    }\n    else if(this.props.id === \"multiply\") {\n      this.props.multiplication(this.props.val);\n    }\n    else if(this.props.id === \"divide\") {\n      this.props.division(this.props.val);\n    }\n    else if(this.props.id === \"equals\") {\n      this.props.equals(this.props.val);\n    }\n    else if(this.props.type === \"number\" || this.props.type === \"decimal\") {\n      this.props.updateDisplay(this.props.val);\n    }\n  }\n\n  render() {\n    return (\n      <div id={this.props.id} className=\"button text-center\" onClick={this.handleClick}>\n        {this.props.val}\n      </div>\n    );\n  }\n}\n\nconst mapDispatchToProps = (dispatch) => ({\n  updateDisplay: currVal => dispatch(updateDisplay(currVal)),\n  addition: currVal => dispatch(addition(currVal)),\n  subtraction: currVal => dispatch(subtraction(currVal)),\n  multiplication: currVal => dispatch(multiplication(currVal)),\n  division: currVal => dispatch(division(currVal)),\n  equals: (currVal) => dispatch(equals(currVal)),\n  clearDisplay: () => dispatch(clearDisplay())\n});\n\n\n\nexport default connect(null, mapDispatchToProps)(Button);\n","import { UPDATE } from \"../constants/action-types\";\nimport { ADD } from \"../constants/action-types\";\nimport { SUBTRACT } from \"../constants/action-types\";\nimport { MULTIPLY } from \"../constants/action-types\";\nimport { DIVIDE } from \"../constants/action-types\";\nimport { CLEAR } from \"../constants/action-types\";\nimport { EQUALS} from \"../constants/action-types\";\n\n\nexport function updateDisplay(value) {\n  return {\n    type: UPDATE,\n    payload: {\n      val: value\n    }\n  }\n};\n\nexport function addition(value) {\n  return {\n    type: ADD,\n    payload: {\n      val: value\n    }\n  }\n};\n\nexport function subtraction(value) {\n  return {\n    type: SUBTRACT,\n    payload: {\n      val: value\n    }\n  }\n};\n\nexport function multiplication(value) {\n  return {\n    type: MULTIPLY,\n    payload: {\n      val: value\n    }\n  }\n};\n\nexport function division(value) {\n  return {\n    type: DIVIDE,\n    payload: {\n      val: value\n    }\n  }\n};\n\nexport function clearDisplay() {\n  return {\n    type: CLEAR,\n    payload: {\n    }\n  }\n};\n\nexport function equals(value) {\n  return {\n    type: EQUALS,\n    payload: {\n      val: value\n    }\n  }\n}\n","import React from \"react\";\nimport \"../css/display.css\";\n\n\nclass Display extends React.Component {\n\n    render() {\n      return (\n        <div id=\"display\">\n          <p id=\"display-value\">\n            {this.props.currVal}\n          </p>\n\n        </div>\n    );\n  }\n}\n\nexport default Display;\n","import React from 'react';\nimport Button from \"./Button\";\nimport Display from \"./Display\";\nimport { getDisplay } from \"../store/store\";\nimport { connect } from \"react-redux\";\nimport \"../css/calculator.css\";\n\nconst mapStateToProps = (state) => {\n  return {\n    currVal: getDisplay(state)\n  }\n};\n\nclass ConnectedCalculator extends React.Component {\n\n  render() {\n    return (\n      <div>\n        <Display currVal={this.props.currVal} />\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-xs-3\">\n              <Button id=\"clear\" val=\"C\" type=\"clear\"/>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xs-3\">\n              <Button id=\"seven\" val=\"7\" type=\"number\"/>\n            </div>\n            <div className=\"col-xs-3\">\n              <Button id=\"eight\" val=\"8\" type=\"number\"/>\n            </div>\n            <div className=\"col-xs-3\">\n              <Button id=\"nine\" val=\"9\" type=\"number\"/>\n            </div>\n            <div className=\"col-xs-3\">\n              <Button id=\"multiply\" val=\"X\" type=\"operator\"/>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xs-3\">\n              <Button id=\"four\" val=\"4\" type=\"number\"/>\n            </div>\n            <div className=\"col-xs-3\">\n              <Button id=\"five\" val=\"5\" type=\"number\"/>\n            </div>\n            <div className=\"col-xs-3\">\n              <Button id=\"six\" val=\"6\" type=\"number\"/>\n            </div>\n            <div className=\"col-xs-3\">\n              <Button id=\"divide\" val=\"/\" type=\"operator\"/>\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xs-3\">\n              <Button id=\"one\" val=\"1\" type=\"number\"/>\n            </div>\n            <div className=\"col-xs-3\">\n              <Button id=\"two\" val=\"2\" type=\"number\"/>\n            </div>\n            <div className=\"col-xs-3\">\n              <Button id=\"three\" val=\"3\" type=\"number\"/>\n            </div>\n            <div className=\"col-xs-3\">\n              <Button id=\"add\" val=\"+\" type=\"operator\" />\n            </div>\n          </div>\n          <div className=\"row\">\n            <div className=\"col-xs-3\">\n              <Button id=\"zero\" val=\"0\" type=\"number\"/>\n            </div>\n            <div className=\"col-xs-3\">\n              <Button id=\"decimal\" val=\".\" type=\"decimal\"/>\n            </div>\n            <div className=\"col-xs-3\">\n              <Button id=\"equals\" val=\"=\" type=\"equals\"/>\n            </div>\n            <div className=\"col-xs-3\">\n              <Button id=\"subtract\" val=\"-\" type=\"operator\"/>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst Calculator = connect(mapStateToProps)(ConnectedCalculator);\n\nexport default Calculator;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from \"react-redux\";\nimport store from \"./js/store/store\";\nimport './index.css';\nimport Calculator from '../src/js/components/Calculator';\nimport 'bootstrap/dist/css/bootstrap.css';\n//import $ from \"jquery\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <Calculator />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('calculator')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\n"],"sourceRoot":""}